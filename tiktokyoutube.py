# Form implementation generated from reading ui file 'tiktokyoutube.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


import shutil
import sys 
from PyQt6 import QtCore, QtGui, QtWidgets
import re
import pyktok as pyk
import os
from pytube import YouTube
import webbrowser
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.videofilename=""
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(926, 686)
        MainWindow.setStyleSheet("background-color: rgb(0, 0, 0);")
        MainWindow.setIconSize(QtCore.QSize(24, 24))
        MainWindow.setFixedSize(926, 686)
        self.input_dialog = QtWidgets.QInputDialog()
        self.style_sheet = """
                QLineEdit {
                color: black;
                background-color: white;
                }
                QPushButton {
                color: white;
                background-color: black;
                }
    """
        self.style_sheetpageclicked="""
                QPushButton{
                color: #000;
                background-color:#fff;
                }
                
    """
        self.style_sheetpage="""
                        QPushButton{
                        background-color:#000;
                        color:#fff;
                        font-size:20px;
                        height:30px;
                        }
                        QPushButton:hover{
                        color: #000;
                        background-color:#fff;
                        }
                        QPushButton:pressed{
                        color: #000;
                        background-color:#fff;
                        }
                        
        """
        
        self.input_dialog.setStyleSheet(self.style_sheet)

        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(9, 9, 911, 73))
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label.setStyleSheet("color: rgb(255, 255, 255);\n"
"font-size:20px;\n"
"")
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 90, 198, 571))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.verticalWidget_2 = QtWidgets.QWidget(parent=self.verticalLayoutWidget)
        self.verticalWidget_2.setStyleSheet("QPushButton{\n"
"color:#fff;\n"
"font-size:20px;\n"
"height:30px;\n"
"border-top-left-radius:10px;\n"
"border-bottom-left-radius:10px;\n"
"border-top-right-radius:10px;\n"
"border-bottom-right-radius:10px;\n"
"}\n"
"QPushButton:hover{\n"
"color: #000;\n"
"background-color:#fff;\n"
"}\n"
"QPushButton:pressed{\n"
"color: #000;\n"
"background-color:#fff;\n"
"}")
        self.verticalWidget_2.setObjectName("verticalWidget_2")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.verticalWidget_2)
        self.verticalLayout_10.setContentsMargins(0, 20, 0, 20)
        self.verticalLayout_10.setSpacing(20)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.youtube = QtWidgets.QPushButton(parent=self.verticalWidget_2)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.youtube.setFont(font)
        self.youtube.setStyleSheet("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Image/YouTube.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.youtube.setIcon(icon)
        self.youtube.setIconSize(QtCore.QSize(40, 40))
        self.youtube.setObjectName("youtube")
        self.verticalLayout_10.addWidget(self.youtube)
        self.tiktok = QtWidgets.QPushButton(parent=self.verticalWidget_2)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.tiktok.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("Image/TikTok44.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.tiktok.setIcon(icon1)
        self.tiktok.setIconSize(QtCore.QSize(28, 28))
        self.tiktok.setObjectName("tiktok")
        self.verticalLayout_10.addWidget(self.tiktok)
        self.verticalLayout.addWidget(self.verticalWidget_2, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.verticalWidget_3 = QtWidgets.QWidget(parent=self.verticalLayoutWidget)
        self.verticalWidget_3.setStyleSheet("QPushButton{\n"
"color:#fff;\n"
"font-size:20px;\n"
"height:30px;\n"
"border-top-left-radius:10px;\n"
"border-bottom-left-radius:10px;\n"
"border-top-right-radius:10px;\n"
"border-bottom-right-radius:10px;\n"
"}\n"
"QPushButton:hover{\n"
"color: #000;\n"
"background-color:#fff;\n"
"}\n"
"QPushButton:pressed{\n"
"color: #000;\n"
"background-color:#fff;\n"
"}")
        self.verticalWidget_3.setObjectName("verticalWidget_3")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.verticalWidget_3)
        self.verticalLayout_11.setContentsMargins(0, 15, 16, 15)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.exit = QtWidgets.QPushButton(parent=self.verticalWidget_3)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.exit.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("Image/Emergency Exit.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.exit.setIcon(icon2)
        self.exit.setIconSize(QtCore.QSize(35, 35))
        self.exit.setObjectName("exit")
        self.verticalLayout_11.addWidget(self.exit)
        self.verticalLayout.addWidget(self.verticalWidget_3, 0, QtCore.Qt.AlignmentFlag.AlignBottom)
        self.verticalFrame_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.verticalFrame_2.setGeometry(QtCore.QRect(209, 89, 721, 571))
        self.verticalFrame_2.setObjectName("verticalFrame_2")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.verticalFrame_2)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.stackedWidget = QtWidgets.QStackedWidget(parent=self.verticalFrame_2)
        self.stackedWidget.setStyleSheet("")
        self.stackedWidget.setObjectName("stackedWidget")
        self.tiktokpage = QtWidgets.QWidget()
        self.tiktokpage.setStyleSheet("background-color: rgb(44, 49, 60);\n"
"border-style: soilid 1px;")
        self.tiktokpage.setObjectName("tiktokpage")
        self.label_2 = QtWidgets.QLabel(parent=self.tiktokpage)
        self.label_2.setGeometry(QtCore.QRect(0, 40, 701, 31))
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_2.setTextFormat(QtCore.Qt.TextFormat.MarkdownText)
        self.label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.lineEdittiktok = QtWidgets.QLineEdit(parent=self.tiktokpage)
        self.lineEdittiktok.setGeometry(QtCore.QRect(120, 180, 481, 31))
        self.lineEdittiktok.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdittiktok.setObjectName("lineEdittiktok")
        self.label_4 = QtWidgets.QLabel(parent=self.tiktokpage)
        self.label_4.setGeometry(QtCore.QRect(180, 130, 371, 31))
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_4.setTextFormat(QtCore.Qt.TextFormat.MarkdownText)
        self.label_4.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.verticalWidget_4 = QtWidgets.QWidget(parent=self.tiktokpage)
        self.verticalWidget_4.setGeometry(QtCore.QRect(90, 320, 550, 111))
        self.verticalWidget_4.setStyleSheet("QPushButton{\n"
"background-color:#000;\n"
"color:#fff;\n"
"font-size:20px;\n"
"height:30px;\n"
"border-top-left-radius:10px;\n"
"border-bottom-left-radius:10px;\n"
"border-top-right-radius:10px;\n"
"border-bottom-right-radius:10px;\n"
"}\n"
"QPushButton:hover{\n"
"color: #000;\n"
"background-color:#fff;\n"
"}\n"
"QPushButton:pressed{\n"
"color: #000;\n"
"background-color:#fff;\n"
"}")
        self.verticalWidget_4.setObjectName("verticalWidget_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.verticalWidget_4)
        self.horizontalLayout.setContentsMargins(0, 20, 0, 20)
        self.horizontalLayout.setSpacing(20)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.downloadtiktok = QtWidgets.QPushButton(parent=self.verticalWidget_4)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.downloadtiktok.setFont(font)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("Image/Downloadicon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.downloadtiktok.setIcon(icon3)
        self.downloadtiktok.setIconSize(QtCore.QSize(24, 24))
        self.downloadtiktok.setObjectName("downloadtiktok")
        self.horizontalLayout.addWidget(self.downloadtiktok)
        self.linktiktok = QtWidgets.QPushButton(parent=self.verticalWidget_4)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.linktiktok.setFont(font)
        self.linktiktok.setIcon(icon1)
        self.linktiktok.setIconSize(QtCore.QSize(24, 24))
        self.linktiktok.setObjectName("linktiktok")
        self.horizontalLayout.addWidget(self.linktiktok)
        self.refreshtiktok = QtWidgets.QPushButton(parent=self.verticalWidget_4)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.refreshtiktok.setFont(font)
        self.refreshtiktok.setStyleSheet("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("Image/Refresh.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.refreshtiktok.setIcon(icon4)
        self.refreshtiktok.setIconSize(QtCore.QSize(20, 20))
        self.refreshtiktok.setObjectName("refreshtiktok")
        self.horizontalLayout.addWidget(self.refreshtiktok)
        self.progresstiktok = QtWidgets.QProgressBar(parent=self.tiktokpage)
        self.progresstiktok.setGeometry(QtCore.QRect(220, 280, 271, 23))
        self.progresstiktok.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.progresstiktok.setProperty("value", 0)
        self.progresstiktok.setObjectName("progresstiktok")
        self.progresstiktok.setVisible(False)
        self.stackedWidget.addWidget(self.tiktokpage)
        self.youtubepage = QtWidgets.QWidget()
        self.youtubepage.setStyleSheet("background-color: rgb(44, 49, 60);")
        self.youtubepage.setObjectName("youtubepage")
        self.label_3 = QtWidgets.QLabel(parent=self.youtubepage)
        self.label_3.setGeometry(QtCore.QRect(0, 40, 701, 31))
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_3.setTextFormat(QtCore.Qt.TextFormat.MarkdownText)
        self.label_3.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.verticalWidget_5 = QtWidgets.QWidget(parent=self.youtubepage)
        self.verticalWidget_5.setGeometry(QtCore.QRect(90, 320, 550, 111))
        self.verticalWidget_5.setStyleSheet("QPushButton{\n"
"background-color:#000;\n"
"color:#fff;\n"
"font-size:20px;\n"
"height:30px;\n"
"border-top-left-radius:10px;\n"
"border-bottom-left-radius:10px;\n"
"border-top-right-radius:10px;\n"
"border-bottom-right-radius:10px;\n"
"}\n"
"QPushButton:hover{\n"
"color: #000;\n"
"background-color:#fff;\n"
"}\n"
"QPushButton:pressed{\n"
"color: #000;\n"
"background-color:#fff;\n"
"}")
        self.verticalWidget_5.setObjectName("verticalWidget_5")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.verticalWidget_5)
        self.horizontalLayout_2.setContentsMargins(0, 20, 0, 20)
        self.horizontalLayout_2.setSpacing(20)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.downloadyoutube = QtWidgets.QPushButton(parent=self.verticalWidget_5)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.downloadyoutube.setFont(font)
        self.downloadyoutube.setIcon(icon3)
        self.downloadyoutube.setIconSize(QtCore.QSize(24, 24))
        self.downloadyoutube.setObjectName("downloadyoutube")
        self.horizontalLayout_2.addWidget(self.downloadyoutube)
        self.linkyoutube = QtWidgets.QPushButton(parent=self.verticalWidget_5)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.linkyoutube.setFont(font)
        self.linkyoutube.setStyleSheet("")
        self.linkyoutube.setIcon(icon)
        self.linkyoutube.setIconSize(QtCore.QSize(20, 20))
        self.linkyoutube.setObjectName("linkyoutube")
        self.horizontalLayout_2.addWidget(self.linkyoutube)
        self.refreshyoutube = QtWidgets.QPushButton(parent=self.verticalWidget_5)
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(16)
        self.refreshyoutube.setFont(font)
        self.refreshyoutube.setStyleSheet("")
        self.refreshyoutube.setIcon(icon4)
        self.refreshyoutube.setIconSize(QtCore.QSize(20, 20))
        self.refreshyoutube.setObjectName("refreshyoutube")
        self.horizontalLayout_2.addWidget(self.refreshyoutube)
        self.lineEdityoutube = QtWidgets.QLineEdit(parent=self.youtubepage)
        self.lineEdityoutube.setGeometry(QtCore.QRect(120, 180, 481, 31))
        self.lineEdityoutube.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdityoutube.setObjectName("lineEdityoutube")
        self.comboBoxyoutube = QtWidgets.QComboBox(parent=self.youtubepage)
        self.comboBoxyoutube.setGeometry(QtCore.QRect(220, 220, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(12)
        self.comboBoxyoutube.setFont(font)
        self.comboBoxyoutube.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(65, 141, 255);\n"
"")
        self.comboBoxyoutube.setObjectName("comboBoxyoutube")
        self.comboBoxyoutube.addItem("")
        self.comboBoxyoutube.addItem("")
        self.comboBoxyoutube.addItem("")
        self.comboBoxyoutube.addItem("")
        self.comboBoxyoutube.addItem("")
        self.comboBoxyoutube.addItem("")
        self.comboBoxyoutube.addItem("")
        self.comboBoxyoutube.addItem("")
        self.label_5 = QtWidgets.QLabel(parent=self.youtubepage)
        self.label_5.setGeometry(QtCore.QRect(180, 130, 361, 31))
        font = QtGui.QFont()
        font.setFamily("Modern No. 20")
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_5.setTextFormat(QtCore.Qt.TextFormat.MarkdownText)
        self.label_5.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.progressBaryoutube = QtWidgets.QProgressBar(parent=self.youtubepage)
        self.progressBaryoutube.setGeometry(QtCore.QRect(220, 280, 271, 23))
        self.progressBaryoutube.setProperty("value", 0)
        self.progressBaryoutube.setObjectName("progressBaryoutube")
        self.progressBaryoutube.setVisible(False)
        self.stackedWidget.addWidget(self.youtubepage)
        self.verticalLayout_12.addWidget(self.stackedWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        #page stacked
        self.stackedWidget.setCurrentWidget(self.youtubepage)
        self.youtube.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.youtubepage))
        self.tiktok.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.tiktokpage))
        self.youtube.clicked.connect(lambda: self.youtube.setStyleSheet(self.style_sheetpageclicked))
        self.youtube.clicked.connect(lambda: self.tiktok.setStyleSheet(self.style_sheetpage))
        self.tiktok.clicked.connect(lambda: self.youtube.setStyleSheet(self.style_sheetpage))
        self.tiktok.clicked.connect(lambda: self.tiktok.setStyleSheet(self.style_sheetpageclicked))
        self.youtube.clicked.connect(lambda: self.lineEdittiktok.setText(""))
        self.tiktok.clicked.connect(lambda: self.lineEdityoutube.setText(""))
        #Sự kiện nút button download youtube
        self.downloadyoutube.clicked.connect(self.downloadytb)
        #Sự kiện nút go to youtube
        self.linkyoutube.clicked.connect(self.openlinkyoutube)
        
        #Sự kiện nút button download tiktok
        self.downloadtiktok.clicked.connect(self.downloadtt)
        #Sự kiện nút go to tiktok
        self.linktiktok.clicked.connect(self.openlinktiktok)
        
        self.refreshyoutube.clicked.connect(lambda: self.lineEdityoutube.setText(""))
        self.refreshyoutube.clicked.connect(lambda: self.comboBoxyoutube.setCurrentIndex(0))
        
        self.refreshtiktok.clicked.connect(lambda: self.lineEdittiktok.setText(""))
        self.exit.clicked.connect(self.exitapp)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("Download Video", "Download Video"))
        self.label.setText(_translate("MainWindow", "Dowload Video"))
        self.youtube.setText(_translate("MainWindow", "Youtube"))
        self.tiktok.setText(_translate("MainWindow", "TikTok"))
        self.exit.setText(_translate("MainWindow", "Exit"))
        self.label_2.setText(_translate("MainWindow", "Download Video From TikTok"))
        self.label_4.setText(_translate("MainWindow", "URL TikTok"))
        self.downloadtiktok.setText(_translate("MainWindow", "Download"))
        self.linktiktok.setText(_translate("MainWindow", "Go to TikTok"))
        self.refreshtiktok.setText(_translate("MainWindow", "Refresh"))
        self.label_3.setText(_translate("MainWindow", "Download Video From Youtube"))
        self.downloadyoutube.setText(_translate("MainWindow", "Download"))
        self.linkyoutube.setText(_translate("MainWindow", "Go to Youtube"))
        self.refreshyoutube.setText(_translate("MainWindow", "Refresh"))
        self.comboBoxyoutube.setItemText(0, _translate("MainWindow", "Chọn độ phân giải"))
        self.comboBoxyoutube.setItemText(1, _translate("MainWindow", "144p"))
        self.comboBoxyoutube.setItemText(2, _translate("MainWindow", "240p"))
        self.comboBoxyoutube.setItemText(3, _translate("MainWindow", "360p"))
        self.comboBoxyoutube.setItemText(4, _translate("MainWindow", "480p"))
        self.comboBoxyoutube.setItemText(5, _translate("MainWindow", "720p"))
        self.comboBoxyoutube.setItemText(6, _translate("MainWindow", "1080p"))
        self.comboBoxyoutube.setItemText(7, _translate("MainWindow", "Chất lượng cao nhất"))
        self.label_5.setText(_translate("MainWindow", "URL YOUTUBE"))

    def downloadytb(self):
                resolution_checkexsitpixel=True
                resolution_pixel=False
                resolution_available = False
                resolution = self.comboBoxyoutube.currentText()
                resolutionidex=self.comboBoxyoutube.currentIndex()               
                # self.progressBaryoutube.setVisible(True)
                url = self.lineEdityoutube.text().strip()               
                if not url:
                        msg=QtWidgets.QMessageBox()
                        msg.setInformativeText('Không được để trống\n'+'Vui lòng nhập URL')
                        msg.setWindowTitle("Error")
                        msg.exec()
                else:
                        if resolutionidex==0:
                                msg=QtWidgets.QMessageBox()
                                msg.setInformativeText('Vui lòng chọn độ phân giải')
                                msg.setWindowTitle("Error")
                                msg.exec() 
                        else:
                                if self.urlyoutuberegex(url):                                        
                                        yt = YouTube(url)
                                        if resolutionidex==7:                                                             
                                                resolution_pixel=True
                                        else :
                                                resolution_pixel=False
                                                video_formats = yt.streams.filter().all()
                                                for stream in video_formats:
                                                        print("Độ phân giải "+str(stream))
                                                        if resolution in str(stream):
                                                               
                                                                resolution_available = True
                                                                break 
                                                if resolution_available==False:
                                                        resolution_checkexsitpixel=False
                                                        msg = QtWidgets.QMessageBox()
                                                        msg.setInformativeText('Độ phân giải không tồn tại trong video')
                                                        msg.setWindowTitle("Error")
                                                        msg.exec()
                                        if resolution_checkexsitpixel==True:
                                                self.input_text, ok_pressed =self.input_dialog.getText( None,"Nhập tên mới", "Nhập tên mới:")
                                                if ok_pressed:
                                                # Xử lý dữ liệu khi người dùng nhấn OK                                        
                                                        current_directory = os.getcwd()
                                                        # Tạo đường dẫn tới thư mục 'Video' trong thư mục hiện tại
                                                        video_directory = os.path.join(current_directory, 'Video')
                                                        new_file_name = self.input_text+'.mp4'
                                                        new_file_path = os.path.join(video_directory, new_file_name)
                                                        if os.path.exists(new_file_path):
                                                                msg = QtWidgets.QMessageBox()
                                                                msg.setInformativeText('Tên tệp đã tồn tại trong thư mục')
                                                                msg.setWindowTitle("Error")
                                                                msg.exec()
                                                        else:                                                               
                                                                #Lấy định dạng video có chất lượng cao nhất                                                   
                                                                if resolution_pixel:                                                             
                                                                        video = yt.streams.get_highest_resolution()
                                                                        downloaded_file_path=video.download(video_directory)
                                                                        os.rename(downloaded_file_path, new_file_path)
                                                                        msg=QtWidgets.QMessageBox()
                                                                        msg.setInformativeText('Đã tải xong video')
                                                                        msg.setWindowTitle("Thông báo")
                                                                        msg.exec()
                                                                        self.lineEdityoutube.setText("")                                                                
                                                                else:                                                                                                                                                     
                                                                        video = yt.streams.filter(res=resolution).first()
                                                                        downloaded_file_path=video.download(video_directory)
                                                                        os.rename(downloaded_file_path, new_file_path)
                                                                        msg=QtWidgets.QMessageBox()
                                                                        msg.setInformativeText('Đã tải xong video')
                                                                        msg.setWindowTitle("Thông báo")
                                                                        msg.exec()
                                                                        self.lineEdityoutube.setText("")
                                                        
                                else:
                                        msg=QtWidgets.QMessageBox()
                                        msg.setInformativeText('Url video youtube không tồn tại')
                                        msg.setWindowTitle("Error")
                                        msg.exec()
                        
    def downloadtt(self):
                url = self.lineEdittiktok.text().strip()
                if not url:
                        msg=QtWidgets.QMessageBox()
                        msg.setInformativeText('Không được để trống\n'+'Vui lòng nhập URL')
                        msg.setWindowTitle("Error")
                        msg.exec()
                else:
                        if self.urltiktokvideo(url):
                                self.input_text, ok_pressed =self.input_dialog.getText( None,"Nhập tên mới", "Nhập tên mới:")
                                if ok_pressed:                        
                                        current_directory = os.getcwd()
                                        # Tạo đường dẫn tới thư mục 'Video' trong thư mục hiện tại
                                        video_directory = os.path.join(current_directory, 'Video')
                                        new_file_name = self.input_text+'.mp4'
                                        new_file_path = os.path.join(video_directory, new_file_name)
                                        if os.path.exists(new_file_path):
                                                msg = QtWidgets.QMessageBox()
                                                msg.setInformativeText('Tên tệp đã tồn tại trong thư mục')
                                                msg.setWindowTitle("Error")
                                                msg.exec()
                                        else:
                                                # Lấy danh sách tất cả các tệp trong thư mục
                                                
                                                pyk.specify_browser('chrome')
                                                pyk.save_tiktok(url,True,'data.csv')
                                                files = os.listdir(current_directory)
                                                mp4_files = [file for file in files if file.endswith('.mp4')]
                                                # Sắp xếp danh sách các tệp theo thời gian sửa đổi, lấy tệp mới nhất
                                                latest_file = max(mp4_files, key=lambda x: os.path.getmtime(os.path.join(current_directory, x)))
                                                filename=latest_file
                                                new_file_path_tiktok = os.path.join(video_directory,filename)                                     
                                                shutil.move(filename, new_file_path_tiktok)
                                                os.rename(new_file_path_tiktok, new_file_path)
                                                msg=QtWidgets.QMessageBox()
                                                msg.setInformativeText('Đã tải xong video')
                                                msg.setWindowTitle("Thông báo")
                                                msg.exec()
                                                self.lineEdittiktok.setText("")
                        else:
                                msg=QtWidgets.QMessageBox()
                                msg.setInformativeText('Url video tiktok không tồn tại')
                                msg.setWindowTitle("Error")
                                msg.exec()

    def openlinkyoutube(self):
            webbrowser.open("https://www.youtube.com/")
    def openlinktiktok(self):
            webbrowser.open("https://www.tiktok.com/")
    def exitapp(self):
            sys.exit(app.exec())
    def urlyoutuberegex(self,url):

        youtube_regex = (
                r'(https?://)?(www\.)?'
                '(youtube|youtu|youtube-nocookie)\.(com|be)/'
                '(watch\?v=|embed/|v/|.+\?v=)?([^&=%\?]{11})'
        )
        match = re.match(youtube_regex, url)
        return match is not None

    def urltiktokvideo(self,url):  
        tiktok_regex = (
                r'(https?://)?(www\.)?'
                '(tiktok)\.(com)/'
                '(@[A-Za-z0-9_-]+/)?'
                '(video/)?'
                '(\d{19})'
        )
        match = re.match(tiktok_regex, url)
        return match is not None        
             
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
